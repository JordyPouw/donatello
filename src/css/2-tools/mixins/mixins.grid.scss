// Grid system
//
// grid-mq($width); - @include grid-mq(min/max-sm/md/lg)
//
// Styleguide Tools.Mixins.GridSystem


// $ grid settings.
@mixin grid-setting($grid-media-query, $grid-method, $prop) {
  @for $index from 1 through $grid-columns {
    // if push or pull, add 0.
    @if ($grid-method == $grid-push) and ($index == 1) or ($grid-method == $grid-pull) and ($index == 1){
      .#{$grid-prefix}#{$grid-method}0#{$grid-media-query} {
        #{$prop}: auto;
      }
    }
    // if offset, add 0.
    @if ($grid-method == $grid-offset) and ($index == 1){
      .#{$grid-prefix}#{$grid-method}0#{$grid-media-query} {
        #{$prop}: 0;
      }
    }
    // normal loop from 1 through x amount of columns.
    .#{$grid-prefix}#{$grid-method}#{$index}#{$grid-media-query} {
      #{$prop}: percentage(($index/$grid-columns));
    }
  }
}


// $ build the grid.
@mixin build-grid($grid-media-query){
  @include grid-setting($grid-media-query, $grid-col, width);

  @if($grid-create-push == true){
    @include grid-setting($grid-media-query, $grid-push, left);
  }

  @if($grid-create-pull == true){
    @include grid-setting($grid-media-query, $grid-pull, right);
  }

  @if($grid-create-offset == true){
    @include grid-setting($grid-media-query, $grid-offset, margin-left);
  }
}


// $ grid media queries.
@mixin grid-mq($width-height1, $width-height2:unquote('')) {
  @if $width-height1 == max-w-sm and $width-height2 == max-h-sm {
    @media only screen and (max-width: mq-unit($grid-query-width-sm + 1)) and (max-height: mq-unit($grid-query-width-sm + 1)) { @content; }
  }

  @else if $width-height1 == max-w-md and $width-height2 == max-h-md {
    @media only screen and (max-width: mq-unit($grid-query-width-md + 1)) and (max-height: mq-unit($grid-query-width-md + 1)) { @content; }
  }

  @else if $width-height1 == max-w-lg and $width-height2 == max-h-lg {
    @media only screen and (max-width: mq-unit($grid-query-width-lg + 1)) and (max-height: mq-unit($grid-query-width-lg + 1)) { @content; }
  }

  @else if $width-height1 == min-w-sm and $width-height2 == min-h-sm {
    @media only screen and (min-width: mq-unit($grid-query-width-sm + 1)) and (min-height: mq-unit($grid-query-width-sm + 1)) { @content; }
  }

  @else if $width-height1 == min-w-md and $width-height2 == min-h-md {
    @media only screen and (min-width: mq-unit($grid-query-width-md + 1)) and (min-height: mq-unit($grid-query-width-md + 1)) { @content; }
  }

  @else if $width-height1 == min-w-lg and $width-height2 == min-h-lg {
    @media only screen and (min-width: mq-unit($grid-query-width-lg + 1)) and (min-height: mq-unit($grid-query-width-lg + 1)) { @content; }
  }

  @else if $width-height1 == min-w-sm and $width-height2 == max-w-md {
    @media only screen and (min-width: mq-unit($grid-query-width-sm + 1)) and (max-width: mq-unit($grid-query-width-md)) { @content; }
  }

  @else if $width-height1 == min-w-sm and $width-height2 == max-w-lg {
    @media only screen and (min-width: mq-unit($grid-query-width-sm + 1)) and (max-width: mq-unit($grid-query-width-lg)) { @content; }
  }

  @else if $width-height1 == min-w-md and $width-height2 == max-w-lg {
    @media only screen and (min-width: mq-unit($grid-query-width-md + 1)) and (max-width: mq-unit($grid-query-width-lg)) { @content; }
  }

  @else if $width-height1 == min-h-sm and $width-height2 == max-h-md {
    @media only screen and (min-height: mq-unit($grid-query-width-sm + 1)) and (max-height: mq-unit($grid-query-width-md)) { @content; }
  }

  @else if $width-height1 == min-h-sm and $width-height2 == max-h-lg {
    @media only screen and (min-height: mq-unit($grid-query-width-sm + 1)) and (max-height: mq-unit($grid-query-width-lg)) { @content; }
  }

  @else if $width-height1 == min-h-md and $width-height2 == max-h-lg {
    @media only screen and (min-height: mq-unit($grid-query-width-md + 1)) and (max-height: mq-unit($grid-query-width-lg)) { @content; }
  }

  @else if $width-height1 == max-w-sm {
    @media only screen and (max-width: mq-unit($grid-query-width-sm)) { @content; }
  }

  @else if $width-height1 == max-w-md {
    @media only screen and (max-width: mq-unit($grid-query-width-md)) { @content; }
  }

  @else if $width-height1 == max-w-lg {
    @media only screen and (max-width: mq-unit($grid-query-width-lg)) { @content; }
  }

  @else if $width-height1 == max-h-sm {
    @media only screen and (min-height: mq-unit($grid-query-width-sm)) { @content; }
  }

  @else if $width-height1 == max-h-md {
    @media only screen and (min-height: mq-unit($grid-query-width-md)) { @content; }
  }

  @else if $width-height1 == max-h-lg {
    @media only screen and (min-height: mq-unit($grid-query-width-lg)) { @content; }
  }

  @else if $width-height1 == min-w-sm {
    @media only screen and (min-width: mq-unit($grid-query-width-sm + 1)) { @content; }
  }

  @else if $width-height1 == min-w-md {
    @media only screen and (min-width: mq-unit($grid-query-width-md + 1)) { @content; }
  }

  @else if $width-height1 == min-w-lg {
    @media only screen and (min-width: mq-unit($grid-query-width-lg + 1)) { @content; }
  }

  @else if $width-height1 == min-h-sm {
    @media only screen and (min-height: mq-unit($grid-query-width-sm)) { @content; }
  }

  @else if $width-height1 == min-h-md {
    @media only screen and (min-height: mq-unit($grid-query-width-md)) { @content; }
  }

  @else if $width-height1 == min-h-lg {
    @media only screen and (min-height: mq-unit($grid-query-width-lg)) { @content; }
  }
}