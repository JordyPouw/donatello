// Media queries
//
// The following media queries mixins are possible.
// - max-width and max-height
// - min-width and min-height
// - min-width and max-width
// - min-height and max-height
// - max-width
// - max-height
// - min-width
// - min-height
//
// mq($min-max1, $width-height1, $min-max2, $width-height2); - @include mq(min/max, width/height, min/max, width/height)
//
// Styleguide Tools.Mixins.MediaQueries


@mixin mq($min-max1, $width-height1, $min-max2:unquote(''), $width-height2:unquote('')) {
  @if $min-max1 == max-w and $min-max2 == max-h {
    @media only screen and (max-width: mq-unit($width-height1 + 1)) and (max-height: mq-unit($width-height2 + 1)) { @content; }
  }

  @else if $min-max1 == min-w and $min-max2 == min-h {
    @media only screen and (min-width: mq-unit($width-height1 + 1)) and (min-height: mq-unit($width-height2 + 1)) { @content; }
  }

  @else if $min-max1 == min-w and $min-max2 == max-w {
    @media only screen and (min-width: mq-unit($width-height1 + 1)) and (max-width: mq-unit($width-height2)) { @content; }
  }

  @else if $min-max1 == min-h and $min-max2 == max-h {
    @media only screen and (min-height: mq-unit($width-height1 + 1)) and (max-height: mq-unit($width-height2)) { @content; }
  }

  @else if $min-max1 == max-w {
    @media only screen and (max-width: mq-unit($width-height1)) { @content; }
  }

  @else if $min-max1 == max-h {
    @media only screen and (max-height: mq-unit($width-height1)) { @content; }
  }

  @else if $min-max1 == min-w {
    @media only screen and (min-width: mq-unit($width-height1 + 1)) { @content; }
  }

  @else if $min-max1 == min-h {
    @media only screen and (min-height: mq-unit($width-height1 + 1)) { @content; }
  }
}
